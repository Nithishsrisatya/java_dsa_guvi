Awesome! Here's a **complete training set for Step 3: Loop-Based Problem Solving (O(n))** â€” everything you need to **master loops**, all structured from basic to moderate logic level.

---

## âœ… **ðŸ”¥ Step 3 Master Training Set â€” Loop-Based O(n) Problems**

Each problem below runs in **linear time (O(n))**, and practices different **loop skills**.

---

### ðŸŸ¢ **Category A: Number Looping**

1. **Sum of First N Natural Numbers**
   âž¤ Input: `n` â†’ Output: `sum = 1 + 2 + ... + n`

2. **Print All Numbers from 1 to N**

3. **Factorial of N**
   âž¤ Input: `n = 5` â†’ Output: `120`

4. **Power of a Number (a^b)**
   âž¤ Input: `a = 2, b = 5` â†’ Output: `32`

5. **Print All Even and Odd Numbers from 1 to N**

---

### ðŸ”µ **Category B: Digit Problems (One number, digit-wise processing)**

6. **Count Number of Digits**
   âž¤ Input: `12345` â†’ Output: `5`

7. **Sum of Digits**
   âž¤ Input: `345` â†’ Output: `12`

8. **Reverse the Number**
   âž¤ Input: `1234` â†’ Output: `4321`

9. **Check Palindrome (e.g., 121, 1331)**
   âž¤ Input: `131` â†’ Output: `Yes`

10. **Count Even and Odd Digits in a Number**
    âž¤ Input: `54813` â†’ Output: `Even: 2, Odd: 3`

11. **Check Armstrong Number**
    âž¤ `153 = 1Â³ + 5Â³ + 3Â³` â†’ Output: `Yes`

---

### ðŸŸ¡ **Category C: Series and Math Logic**

12. **Fibonacci Series up to N terms**
    âž¤ Input: `n = 7` â†’ Output: `0 1 1 2 3 5 8`

13. **Check Prime Number**
    âž¤ Input: `n = 13` â†’ Output: `Prime`

14. **Print All Prime Numbers up to N**

15. **Find GCD (HCF) of Two Numbers**

16. **Find LCM of Two Numbers**

17. **Print Multiplication Table of N**

---

### ðŸŸ  **Category D: Character/String-Based with Loops**

18. **Count Vowels and Consonants in a Word**

19. **Convert Uppercase Letters to Lowercase (manually)**

20. **Check if a Word is a Palindrome (e.g., "madam")**

21. **Count Frequency of a Given Character in a String**

22. **Reverse a String using Loop**

---

### ðŸŸ£ **Category E: Logic-Based Applications**

23. **ATM Cash Denomination**
    âž¤ Input: `amount = 2860` â†’ Output:

```
500 x 5  
100 x 3  
50 x 1  
10 x 1
```

24. **Decimal to Binary Conversion using Loop**

25. **Find the Sum of First N Odd Numbers**

26. **Find the Sum of First N Even Numbers**

27. **Check if a Number is a Strong Number**
    âž¤ e.g., `145 = 1! + 4! + 5!`

28. **Find the Product of Digits of a Number**

---

### ðŸ§  Bonus: Mixed Logic Challenges

29. **Find the Second Largest Digit in a Number**

30. **Sum of Digits Until Single Digit Remains**
    âž¤ Input: `9875 â†’ 9+8+7+5 = 29 â†’ 2+9 = 11 â†’ 1+1 = 2`

---