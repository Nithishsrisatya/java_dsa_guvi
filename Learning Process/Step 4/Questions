Awesome! Letâ€™s level up to **ðŸ‘‰ Step 4: O(nÂ²) Problem Solving with Nested Loops** â€” this step is critical for building logic-heavy programs like pattern printing, pair comparisons, and brute-force algorithms.

---

## âœ… **Step 4: Nested Loops â€” O(nÂ²) Problem Solving**

### ðŸ”„ **Nested Loop = Loop inside another loop**

Most problems here involve **2 dimensions** or **all pair combinations**.

---

### ðŸ”¹ **Skill You Will Gain**

| Skill                  | Used For                                |
| ---------------------- | --------------------------------------- |
| Loop inside loop       | Grids, patterns, comparisons            |
| i vs j logic           | Matrix problems                         |
| Breaking down 2D logic | Tables, matches, nested decisions       |
| Brute force logic      | Comparing each element with every other |

---

## ðŸŸ¢ **Category A: Pattern Printing (Super Important)**

### ðŸ”¸ Q1. Square of Stars (n x n)

```
Input: n = 4
Output:
****
****
****
****
```

---

### ðŸ”¸ Q2. Right-Angled Triangle

```
Input: n = 5
Output:
*
**
***
****
*****
```

---

### ðŸ”¸ Q3. Inverted Triangle

```
*****
****
***
**
*
```

---

### ðŸ”¸ Q4. Number Pyramid

```
1
12
123
1234
12345
```

---

### ðŸ”¸ Q5. Star Pyramid

```
    *
   ***
  *****
 *******
*********
```

> Use space loop + star loop (2i â€“ 1 stars)

---

### ðŸ”¸ Q6. Floydâ€™s Triangle

```
1
2 3
4 5 6
7 8 9 10
```

---

### ðŸ”¸ Q7. Pascalâ€™s Triangle

```
1
1 1
1 2 1
1 3 3 1
```

---

## ðŸ”µ **Category B: 2D Arrays / Grids / Matrices**

### ðŸ”¸ Q8. Print a 2D Matrix

```
Input: 3x3
Output:
1 2 3
4 5 6
7 8 9
```

---

### ðŸ”¸ Q9. Transpose of a Matrix

---

### ðŸ”¸ Q10. Matrix Addition / Multiplication

---

## ðŸ”´ **Category C: All-Pair Comparisons (Brute-Force)**

### ðŸ”¸ Q11. Count Pairs in Array with Given Sum

e.g., arr = \[1, 3, 2, 2], target = 4
Output: `(1, 3), (2, 2)`

---

### ðŸ”¸ Q12. Print All Pairs in an Array

Input: `[a, b, c]`
Output: `(a, b), (a, c), (b, c)`

---

### ðŸ”¸ Q13. Check for Duplicates (Brute-force method)

Nested loop to check if any `arr[i] == arr[j]`

---

### ðŸ”¸ Q14. Bubble Sort (Classic O(nÂ²))

Sort using nested loop with swaps

---

### ðŸ”¸ Q15. Selection Sort

---

## ðŸŸ¡ **Category D: Mixed Grid Problems**

### ðŸ”¸ Q16. Print Multiplication Table (Matrix style)

```
1  2  3
2  4  6
3  6  9
```

---

### ðŸ”¸ Q17. Count Number of 1s in 2D Binary Matrix

---

### ðŸ”¸ Q18. Find Largest Element in Each Row

---

### ðŸ”¸ Q19. Sum of Diagonal Elements (Left and Right diagonals)

---

### ðŸ”¸ Q20. Checkerboard Pattern

```
# #
 # 
# #
```

---

### âœ… Tracker Table (Optional for Progress)

| Problem No. | Done | Notes |
| ----------- | ---- | ----- |
| 1           |      |       |
| 2           |      |       |
| ...         |      |       |

---